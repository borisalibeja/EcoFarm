// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  userId        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username    String @unique
  password    String
  firstName   String 
  lastName    String
  contactInfo String
  role        String
  farmName  String @unique

  productsByFarmName Products[] @relation("ProductsByFarmName")
  productsByFarmId   Products[] @relation("ProductsByFarmId")
}

model Products {
  productId String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productName String
  category String
  price String

  farmName    String
  farmname  User       @relation("ProductsByFarmName", fields: [farmName], references: [farmName])
  farmId    String     @db.ObjectId
  farmid   User       @relation("ProductsByFarmId", fields: [farmId], references: [userId])
}

// model FarmProductLink {
//   id         String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   role String

//   userId String @db.ObjectId
//   user   User @relation(fields: [userId], references: [id])

//   productId String @db.ObjectId
//   product   Products @relation(fields: [productId], references: [id])

//   assignedAt DateTime @default(now())
//   assignedBy String


// }

// model Department {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   name String @unique

//   usersLink UserDepartmentLink[]
// }

// model UserDepartmentLink {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   role     String // USER, ADMIN, MANAGER
//   jobTitle String

//   userId String @db.ObjectId
//   user   User @relation(fields: [userId], references: [id])

//   departmentId String @db.ObjectId
//   department   Department @relation(fields: [departmentId], references: [id])

//   assignedAt DateTime @default(now())
//   assignedBy String
// }
